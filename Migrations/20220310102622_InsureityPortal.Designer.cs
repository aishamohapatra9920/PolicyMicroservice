// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PolicyMicroservice.Models;

#nullable disable

namespace PolicyMicroservice.Migrations
{
    [DbContext(typeof(InsureityPortalDatabaseContext))]
    [Migration("20220310102622_InsureityPortal")]
    partial class InsureityPortal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PolicyMicroservice.Models.Agent", b =>
                {
                    b.Property<int>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgentId"), 1L, 1);

                    b.Property<string>("AgentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgentId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Business", b =>
                {
                    b.Property<int>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessId"), 1L, 1);

                    b.Property<int>("BusinessMasterId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<int>("TotalEmployees")
                        .HasColumnType("int");

                    b.HasKey("BusinessId");

                    b.HasIndex("BusinessMasterId");

                    b.HasIndex("ConsumerId");

                    b.ToTable("Businesses");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.BusinessMaster", b =>
                {
                    b.Property<int>("BusinessMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessMasterId"), 1L, 1);

                    b.Property<int>("BusinessTurnOver")
                        .HasColumnType("int");

                    b.Property<int>("BusinessValue")
                        .HasColumnType("int");

                    b.Property<int>("CapitalInvest")
                        .HasColumnType("int");

                    b.HasKey("BusinessMasterId");

                    b.ToTable("BusinessMasters");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Consumer", b =>
                {
                    b.Property<int>("ConsumerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsumerId"), 1L, 1);

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<string>("ConsumerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PanNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConsumerId");

                    b.HasIndex("AgentId");

                    b.ToTable("Consumers");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.ConsumerPolicy", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyId"), 1L, 1);

                    b.Property<int>("PolicyMasterId")
                        .HasColumnType("int");

                    b.Property<string>("PolicyStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int>("QuoteId")
                        .HasColumnType("int");

                    b.HasKey("PolicyId");

                    b.HasIndex("PolicyMasterId");

                    b.HasIndex("PropertyId");

                    b.HasIndex("QuoteId");

                    b.ToTable("ConsumerPolicies");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.PolicyMaster", b =>
                {
                    b.Property<int>("PolicyMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyMasterId"), 1L, 1);

                    b.Property<decimal>("AssuredSum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BaseLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BusinesssValue")
                        .HasColumnType("int");

                    b.Property<string>("ConsumerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyValue")
                        .HasColumnType("int");

                    b.Property<int>("Tenure")
                        .HasColumnType("int");

                    b.HasKey("PolicyMasterId");

                    b.ToTable("PolicyMasters");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Property", b =>
                {
                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyId"), 1L, 1);

                    b.Property<int>("BuildingAge")
                        .HasColumnType("int");

                    b.Property<int>("BuildingStoreys")
                        .HasColumnType("int");

                    b.Property<string>("BuildingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyMasterId")
                        .HasColumnType("int");

                    b.HasKey("PropertyId");

                    b.HasIndex("BusinessId");

                    b.HasIndex("PropertyMasterId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.PropertyMaster", b =>
                {
                    b.Property<int>("PropertyMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyMasterId"), 1L, 1);

                    b.Property<int>("CostOfAssest")
                        .HasColumnType("int");

                    b.Property<int>("PropertyValue")
                        .HasColumnType("int");

                    b.Property<int>("SalvageValue")
                        .HasColumnType("int");

                    b.Property<int>("UsefulLifeOfAssest")
                        .HasColumnType("int");

                    b.HasKey("PropertyMasterId");

                    b.ToTable("PropertyMasters");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Quotes", b =>
                {
                    b.Property<int>("QuoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuoteId"), 1L, 1);

                    b.Property<int>("BusinesssValueFrom")
                        .HasColumnType("int");

                    b.Property<int>("BusinesssValueTo")
                        .HasColumnType("int");

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyValueFrom")
                        .HasColumnType("int");

                    b.Property<int>("PropertyValueTo")
                        .HasColumnType("int");

                    b.Property<decimal>("QuoteValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("QuoteId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Business", b =>
                {
                    b.HasOne("PolicyMicroservice.Models.BusinessMaster", "BusinessMaster")
                        .WithMany("Businesses")
                        .HasForeignKey("BusinessMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PolicyMicroservice.Models.Consumer", "Consumer")
                        .WithMany("Businesses")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessMaster");

                    b.Navigation("Consumer");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Consumer", b =>
                {
                    b.HasOne("PolicyMicroservice.Models.Agent", "Agent")
                        .WithMany("Consumers")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.ConsumerPolicy", b =>
                {
                    b.HasOne("PolicyMicroservice.Models.PolicyMaster", "PolicyMaster")
                        .WithMany("ConsumerPolicies")
                        .HasForeignKey("PolicyMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PolicyMicroservice.Models.Property", "Property")
                        .WithMany("ConsumerPolicies")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PolicyMicroservice.Models.Quotes", "Quote")
                        .WithMany("ConsumerPolicies")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PolicyMaster");

                    b.Navigation("Property");

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Property", b =>
                {
                    b.HasOne("PolicyMicroservice.Models.Business", "Business")
                        .WithMany("Properties")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PolicyMicroservice.Models.PropertyMaster", "PropertyMaster")
                        .WithMany("Properties")
                        .HasForeignKey("PropertyMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Business");

                    b.Navigation("PropertyMaster");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Agent", b =>
                {
                    b.Navigation("Consumers");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Business", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.BusinessMaster", b =>
                {
                    b.Navigation("Businesses");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Consumer", b =>
                {
                    b.Navigation("Businesses");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.PolicyMaster", b =>
                {
                    b.Navigation("ConsumerPolicies");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Property", b =>
                {
                    b.Navigation("ConsumerPolicies");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.PropertyMaster", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Quotes", b =>
                {
                    b.Navigation("ConsumerPolicies");
                });
#pragma warning restore 612, 618
        }
    }
}
